[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/configureStore.ts":"4","/front/src/sagas/index.ts":"5","/front/src/reducers/index.ts":"6","/front/src/components/LinkComponent.tsx":"7","/front/src/containers/login/LoginContainer.tsx":"8","/front/src/reducers/cardReducer.ts":"9","/front/src/constants/actionTypes.ts":"10","/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx":"11","/front/src/actions/cardActions.ts":"12","/front/src/sagas/cardSaga.ts":"13","/front/src/apis/cardApis.ts":"14","/front/src/utils/firebase.ts":"15","/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx":"16","/front/src/components/subscription-card/TopSubscriptionCardContainer.tsx":"17","/front/src/components/subscription-card/DetailSubscriptionCardComponent.tsx":"18","/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx":"19","/front/src/reducers/userReducer.ts":"20","/front/src/sagas/userSaga.ts":"21","/front/src/actions/userActions.ts":"22","/front/src/apis/userApis.ts":"23","/front/src/models/UserModels.ts":"24"},{"size":714,"mtime":1609752845142,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1609049254169,"results":"27","hashOfConfig":"26"},{"size":790,"mtime":1610184417973,"results":"28","hashOfConfig":"26"},{"size":808,"mtime":1609752845141,"results":"29","hashOfConfig":"26"},{"size":264,"mtime":1610184093968,"results":"30","hashOfConfig":"26"},{"size":458,"mtime":1610184093967,"results":"31","hashOfConfig":"26"},{"size":329,"mtime":1609752845140,"results":"32","hashOfConfig":"26"},{"size":1430,"mtime":1610184093966,"results":"33","hashOfConfig":"26"},{"size":2037,"mtime":1610349083151,"results":"34","hashOfConfig":"26"},{"size":1705,"mtime":1610184093965,"results":"35","hashOfConfig":"26"},{"size":3574,"mtime":1610351128881,"results":"36","hashOfConfig":"26"},{"size":2034,"mtime":1610350245349,"results":"37","hashOfConfig":"26"},{"size":2573,"mtime":1610350433090,"results":"38","hashOfConfig":"26"},{"size":2135,"mtime":1610351302641,"results":"39","hashOfConfig":"26"},{"size":645,"mtime":1609760460854,"results":"40","hashOfConfig":"26"},{"size":2949,"mtime":1610352315941,"results":"41","hashOfConfig":"26"},{"size":5101,"mtime":1610352445934,"results":"42","hashOfConfig":"26"},{"size":1441,"mtime":1610352516812,"results":"43","hashOfConfig":"26"},{"size":3124,"mtime":1610349153259,"results":"44","hashOfConfig":"26"},{"size":1172,"mtime":1610184093968,"results":"45","hashOfConfig":"26"},{"size":1127,"mtime":1610184093968,"results":"46","hashOfConfig":"26"},{"size":799,"mtime":1610184093964,"results":"47","hashOfConfig":"26"},{"size":2058,"mtime":1610184093964,"results":"48","hashOfConfig":"26"},{"size":972,"mtime":1610184093967,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"vp4hng",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/front/src/index.tsx",[],["105","106"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",["107"],"import React from 'react';\nimport { StylesProvider } from '@material-ui/styles';\nimport { \n  BrowserRouter as Router, \n  Route\n} from 'react-router-dom';\n\nimport './App.css';\nimport LoginContainer from \"./containers/login/LoginContainer\";\nimport AddSubscriptionCardContainer from \"./containers/add-subscription-card/AddSubscriptionCard\";\nimport ShowSubscriptionCard from \"./containers/show-subscription-card/ShowSubscriptionCard\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <StylesProvider injectFirst>\n        <Router>\n          <div className=\"App\">\n            <Route exact path=\"/\" component={LoginContainer} />\n            <Route path=\"/top\" component={ShowSubscriptionCard} />\n          </div>\n        </Router>\n      </StylesProvider>\n    </>\n  );\n}\n\nexport default App;\n","/front/src/configureStore.ts",["108","109"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\nimport rootReducer from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/sagas/index.ts",[],"/front/src/reducers/index.ts",[],"/front/src/components/LinkComponent.tsx",[],["110","111"],"/front/src/containers/login/LoginContainer.tsx",["112"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\"\n\nimport LinkComponent from \"../../components/LinkComponent\";\nimport \"./LoginContainer.css\";\n\nconst LoginContainer: React.FC = () => {\n  return (\n    <>\n      <div className=\"top-container\">\n        <h1>App Title</h1>\n        <LinkComponent src=\"/top\">\n          <Button variant=\"contained\" color=\"primary\">Login</Button>\n        </LinkComponent>\n      </div>\n    </>\n  )\n}\n\nexport default LoginContainer;","/front/src/reducers/cardReducer.ts",[],"/front/src/constants/actionTypes.ts",[],"/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx",[],"/front/src/actions/cardActions.ts",[],"/front/src/sagas/cardSaga.ts",[],"/front/src/apis/cardApis.ts",[],"/front/src/utils/firebase.ts",[],"/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx",["113","114"],"/front/src/components/subscription-card/TopSubscriptionCardContainer.tsx",[],"/front/src/components/subscription-card/DetailSubscriptionCardComponent.tsx",[],"/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx",["115","116"],"import React, { useState, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport * as Models from \"../../models/CardModels\";\nimport { AppState } from \"../../models/index\";\nimport { EditCardAction } from \"../../actions/cardActions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from '@material-ui/core/TextField';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\ninterface Props {\n  card: Models.CardBody;\n  editCard: (payload: Models.CardBody) => void;\n  setEditDialog: any\n}\n\nconst EditSubscriptionCardContainer: React.FC<Props> = ({\n  card,\n  editCard,\n  setEditDialog\n}) => {\n  const [open, setOpen] = useState<boolean>(true);\n  const [name, setName] = useState<string>(card.name);\n  const [price, setPrice] = useState<number>(card.price);\n  const [caption, setCaption] = useState<string>(card.caption);\n  const classes = useStyles();\n\n  const submitEditValue = async (e: FormEvent) => {\n    e.preventDefault();\n    const data = {\n      id: card.id,\n      userId: card.userId,\n      name: name,\n      price: price,\n      caption: caption\n    }\n\n    await editCard(data)\n    setEditDialog()\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <TextField\n            label=\"サービス名\"\n            id=\"outlined-margin-none\"\n            defaultValue={card.name}\n            onChange={e => setName(e.target.value)}\n            variant=\"outlined\"/>\n          \n          <TextField\n            label=\"月額料金\"\n            id=\"outlined-margin-none\"\n            defaultValue={card.price}\n            onChange={e => setPrice(Number(e.target.value))}\n            variant=\"outlined\"/>\n          \n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"サービス概要\"\n            multiline\n            rows={4}\n            defaultValue={card.caption}\n            onChange={e => setCaption(e.target.value)}\n            variant=\"outlined\"\n          />\n\n        </CardContent>\n        <CardActions>\n          {/* TODO：ここをクリックするとモーダルが表示され、編集できるようにする */}\n          <Button size=\"small\" color=\"primary\" onClick={submitEditValue}>\n            Edit\n          </Button>\n          {/* TODO：ここをクリックすると確認モーダルが表示され、削除できるようにする */}\n          <Button size=\"small\" color=\"primary\">\n            Close\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    editCard: (dummy: Models.CardBody) => EditCardAction.start(dummy)\n  }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditSubscriptionCardContainer);","/front/src/reducers/userReducer.ts",[],"/front/src/sagas/userSaga.ts",["117"],"import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\n\nimport * as ActionTypes from '../constants/actionTypes';\nimport * as Models from '../models/UserModels';\nimport * as APIs from '../apis/userApis';\nimport { \n  loginAction } from \"../actions/userActions\";\n\n\nexport function* runlogin () {\n  const handler = APIs.login;\n  const {loginUser, error} = yield call(handler);\n  if (loginUser && !error) {\n    console.log('login Saga OK');\n    yield put(loginAction.success(loginUser));\n  } else {\n    console.log('login Saga NG');\n    yield put(loginAction.failure());\n  };\n}\n\nexport function* watchUers () {\n  yield takeEvery(ActionTypes.LOGIN_START, runlogin)\n}\n\nexport default function* rootSaga () {\n  yield all([fork(watchUers)])\n}","/front/src/actions/userActions.ts",[],"/front/src/apis/userApis.ts",[],"/front/src/models/UserModels.ts",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":10,"column":8,"nodeType":"124","messageId":"125","endLine":10,"endColumn":36},{"ruleId":"126","severity":1,"message":"127","line":14,"column":67,"nodeType":"128","messageId":"129","endLine":14,"endColumn":69},{"ruleId":"126","severity":1,"message":"127","line":14,"column":114,"nodeType":"128","messageId":"129","endLine":14,"endColumn":116},{"ruleId":"118","replacedBy":"130"},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","severity":1,"message":"132","line":13,"column":8,"nodeType":"124","messageId":"125","endLine":13,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":34,"column":6,"nodeType":"135","endLine":34,"endColumn":25,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":34,"column":7,"nodeType":"138","endLine":34,"endColumn":24},{"ruleId":"122","severity":1,"message":"139","line":36,"column":10,"nodeType":"124","messageId":"125","endLine":36,"endColumn":14},{"ruleId":"122","severity":1,"message":"140","line":36,"column":16,"nodeType":"124","messageId":"125","endLine":36,"endColumn":23},{"ruleId":"122","severity":1,"message":"141","line":4,"column":13,"nodeType":"124","messageId":"125","endLine":4,"endColumn":19},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"@typescript-eslint/no-unused-vars","'AddSubscriptionCardContainer' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["142"],["143"],"'LinkComponent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCard' and 'user.id'. Either include them or remove the dependency array. If 'getAllCard' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["144"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","AssignmentExpression","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Models' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [getAllCard, user.id]",{"range":"147","text":"148"},[1038,1057],"[getAllCard, user.id]"]