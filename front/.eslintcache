[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/configureStore.ts":"4","/front/src/sagas/index.ts":"5","/front/src/reducers/index.ts":"6","/front/src/components/LinkComponent.tsx":"7","/front/src/containers/login/LoginContainer.tsx":"8","/front/src/reducers/cardReducer.ts":"9","/front/src/constants/actionTypes.ts":"10","/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx":"11","/front/src/actions/cardActions.ts":"12","/front/src/sagas/cardSaga.ts":"13","/front/src/apis/cardApis.ts":"14","/front/src/utils/firebase.ts":"15","/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx":"16","/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx":"17","/front/src/reducers/userReducer.ts":"18","/front/src/sagas/userSaga.ts":"19","/front/src/actions/userActions.ts":"20","/front/src/apis/userApis.ts":"21","/front/src/models/UserModels.ts":"22","/front/src/containers/amount/AmountComponent.tsx":"23","/front/src/containers/detail-subscription-card/DetailSubscriptionCardComponent.tsx":"24","/front/src/containers/top-subscription-card/TopSubscriptionCardContainer.tsx":"25"},{"size":714,"mtime":1609752845142,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1609049254169,"results":"28","hashOfConfig":"27"},{"size":691,"mtime":1611188352951,"results":"29","hashOfConfig":"27"},{"size":808,"mtime":1611478147119,"results":"30","hashOfConfig":"27"},{"size":203,"mtime":1611841795262,"results":"31","hashOfConfig":"27"},{"size":458,"mtime":1610184093967,"results":"32","hashOfConfig":"27"},{"size":329,"mtime":1609752845140,"results":"33","hashOfConfig":"27"},{"size":1825,"mtime":1611841795260,"results":"34","hashOfConfig":"27"},{"size":2562,"mtime":1611879348850,"results":"35","hashOfConfig":"27"},{"size":2137,"mtime":1611188352954,"results":"36","hashOfConfig":"27"},{"size":3994,"mtime":1611879178628,"results":"37","hashOfConfig":"27"},{"size":2934,"mtime":1611879178626,"results":"38","hashOfConfig":"27"},{"size":2932,"mtime":1611841795262,"results":"39","hashOfConfig":"27"},{"size":3421,"mtime":1611879178628,"results":"40","hashOfConfig":"27"},{"size":645,"mtime":1609760460854,"results":"41","hashOfConfig":"27"},{"size":5285,"mtime":1611879495873,"results":"42","hashOfConfig":"27"},{"size":3690,"mtime":1611879450662,"results":"43","hashOfConfig":"27"},{"size":1559,"mtime":1611188352955,"results":"44","hashOfConfig":"27"},{"size":1555,"mtime":1611841795263,"results":"45","hashOfConfig":"27"},{"size":1279,"mtime":1611188352952,"results":"46","hashOfConfig":"27"},{"size":3000,"mtime":1611841795254,"results":"47","hashOfConfig":"27"},{"size":1312,"mtime":1611188352955,"results":"48","hashOfConfig":"27"},{"size":2718,"mtime":1611841870475,"results":"49","hashOfConfig":"27"},{"size":2087,"mtime":1611841795257,"results":"50","hashOfConfig":"27"},{"size":5330,"mtime":1611879694499,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"vp4hng",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/front/src/index.tsx",[],["110","111"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",[],"/front/src/configureStore.ts",["112","113"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\nimport rootReducer from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/sagas/index.ts",[],"/front/src/reducers/index.ts",[],"/front/src/components/LinkComponent.tsx",[],["114","115"],"/front/src/containers/login/LoginContainer.tsx",["116"],"import React from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport { AppState } from \"../../models/index\";\nimport * as Models from \"../../models/UserModels\";\nimport { loginAction } from \"../../actions/userActions\";\nimport \"./LoginContainer.css\";\n\ninterface Props {\n  login: () => void;\n  user: Models.LoginUser;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }),\n);\n\nconst LoginContainer: React.FC<Props> = ({\n  login,\n  user,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"top-container\">\n        <div className={classes.root}>\n          <LinearProgress />\n            <h1 className=\"app-title\">Subscription Manager</h1>\n          <LinearProgress color=\"secondary\" />\n        </div>\n\n        { user.id !== \"\" ? \n          <Redirect to={\"/top\"} /> \n          :\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className=\"login-button\"\n            startIcon={<ExitToAppIcon />}\n            onClick={login}>Login</Button> \n        }\n      </div>\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user.user\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    login: () => loginAction.start(),\n  }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);","/front/src/reducers/cardReducer.ts",[],"/front/src/constants/actionTypes.ts",[],"/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx",["117"],"import React, { useState, FormEvent } from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { TextareaAutosize } from \"@material-ui/core\";\n\nimport * as Models from \"../../models/CardModels\";\nimport { AppState } from \"../../models/index\";\nimport { \n  AddCardAction,\n  GetAllCardAction,\n  GetAmountAction\n} from \"../../actions/cardActions\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 600,\n  },\n  media: {\n    height: 140\n  },\n  cardContent: {\n    textAlign: \"left\",\n    maxWidth: 450,\n    margin: \"auto\",\n  },\n  textArea: {\n    minWidth: \"100%\"\n  },\n  buttons: {\n    width: \"80%\",\n    margin: \"auto\",\n    justifyContent: \"flex-end\",\n  }\n});\n\ninterface Props {\n  userId: string;\n  addCard: (payload: Models.AddCardBody) => void;\n  getAllCard: (id: string) => void;\n  getAmount: (id: string) => void;\n  setAddDialog: any;  // 親コンポーネントのState変更用関数を受け取っている\n}\n\ninterface AddCardPayload {\n  userId: string;\n  name: string;\n  price: number;\n  caption: string;\n}\n\nconst AddSubscriptionCardContainer: React.FC<Props> = ({\n  userId,\n  addCard,\n  setAddDialog,\n  getAllCard,\n  getAmount\n}) => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [price, setPrice] = useState<number>(0);\n  const [caption, setCaption] = useState<string>(\"\");\n  const classes = useStyles();\n\n  const handleOnSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    const payload: AddCardPayload = {\n      userId: userId,\n      name: title,\n      price: price,\n      caption: caption\n    }\n    await addCard(payload);\n    await getAllCard(userId);\n    \n    setTimeout(() => {\n      getAmount(userId);\n    }, 1000)\n\n    setAddDialog(false);\n    setTitle(\"\");\n    setPrice(0);\n    setCaption(\"\");\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent className={classes.cardContent}>\n          <h3>サービス名</h3>\n          <TextareaAutosize\n            className={classes.textArea}\n            placeholder=\"サービス名\"\n            value={title}\n            rowsMin={2}\n            onChange={(e) => setTitle(e.target.value)}/>\n\n          <h3>月額料金</h3>\n          <TextField\n            className={classes.textArea}\n            placeholder=\"月額料金\"\n            type=\"number\"\n            value={price}\n            onChange={(e) => setPrice(Number(e.target.value))}/>\n\n          <h3>サービス内容</h3>\n          <TextareaAutosize\n            className={classes.textArea}\n            placeholder=\"サービス内容\"\n            value={caption}\n            rowsMin={10}\n            onChange={(e) => setCaption(e.target.value)}/>\n        </CardContent>\n        <CardActions className={classes.buttons}>\n          <Button\n            size=\"medium\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleOnSubmit}>\n            Save\n          </Button>\n          <Button\n            size=\"medium\"\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => setAddDialog(false)}>\n            Close\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    addCard: (payload: AddCardPayload) => AddCardAction.start(payload),\n    getAllCard: (userId: string) => GetAllCardAction.start(userId),\n    getAmount: (userId: string) => GetAmountAction.start(userId),\n  }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddSubscriptionCardContainer);","/front/src/actions/cardActions.ts",[],"/front/src/sagas/cardSaga.ts",[],"/front/src/apis/cardApis.ts",[],"/front/src/utils/firebase.ts",[],"/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx",["118"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Redirect } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from '@material-ui/core/Grid';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport firebase from \"../../utils/firebase\";\nimport * as Models from \"../../models/CardModels\";\nimport { LoginUser } from \"../../models/UserModels\";\nimport { AppState } from \"../../models/index\";\nimport {\n  GetAllCardAction,\n  GetAmountAction\n} from \"../../actions/cardActions\";\nimport {\n  logoutAction,\n  loginMonitoringAction\n} from \"../../actions/userActions\";\n\nimport TopSubscriptionCardContainer from \"../top-subscription-card/TopSubscriptionCardContainer\";\nimport AddSubscriptionCardContainer from \"../../containers/add-subscription-card/AddSubscriptionCard\";\nimport AmountComponent from \"../amount/AmountComponent\";\nimport \"./ShowSubscriptionCard.css\";\n\ninterface Props {\n  getAllCard: (id: string) => void;\n  logout: () => void;\n  getAmount: (id: string) => void;\n  loginCheck: () => void;\n  user: LoginUser;\n  getLoading: boolean;\n  amountLoading: boolean;\n  allCards: Models.CardBody[];\n  amount: Models.CardPriceAmount;\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      width: \"80%\",\n      margin: \"auto\"\n    },\n    logoutButton: {\n      float: \"right\",\n      marginRight: \"10%\"\n    },\n    addButton: {\n      float: \"left\",\n      marginTop: \"5%\",\n      width: \"20%\",\n      height: \"20%\",\n      fontSize: '20px'\n    },\n    addDialog: {\n      minWidth: 300,\n    },\n    appBar: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    headerFont: {\n      fontWeight: \"bold\"\n    }\n  }),\n);\n\nconst ShowSubscriptionCard: React.FC<Props> = ({\n  getAllCard,\n  allCards,\n  amountLoading,\n  getLoading,\n  logout,\n  user,\n  loginCheck,\n  getAmount,\n  amount\n}) => {\n  const [addDialog, setAddDialog] = useState<boolean>(false);\n  const [check, setCheck] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState<boolean>(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(fuser => {\n      if (fuser) {\n        setCheck(true);\n        loginCheck();\n        getAllCard(fuser.uid);\n        getAmount(fuser.uid);\n      } else {\n        setRedirect(true);\n      }\n    })\n  }, []);\n\n  const addDialogClose = () => {\n    setAddDialog(false);\n    getAllCard(user.id);\n    getAmount(user.id);\n  }\n\n  return (\n    <>\n      { check ?\n        <div className=\"head\">\n          <AppBar position=\"static\">\n            <Toolbar className={classes.appBar}>\n              <Typography variant=\"h6\" className={classes.headerFont}>\n                Hello! {user.name} さん！\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                size=\"large\"\n                startIcon={<ExitToAppIcon />}\n                className={classes.logoutButton}\n                onClick={logout}>logout</Button>\n            </Toolbar>\n          </AppBar>\n          <Dialog\n            open={addDialog}\n            onClose={addDialogClose}>\n            <AddSubscriptionCardContainer userId={user.id} setAddDialog={() => setAddDialog(false)} />\n          </Dialog>\n        </div>\n        :\n        <h1>Now loginCheck</h1>\n      }\n\n      <AmountComponent amount={amount} />\n      <div className=\"add-button-warapper\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.addButton}\n          startIcon={<AddCircleOutlineOutlinedIcon />}\n          onClick={() => setAddDialog(true)}>ADD</Button>\n      </div>\n\n      { redirect ? <Redirect to=\"/\" /> : null }\n\n      { user.id === \"\" ?\n        <h1>Now Loading...</h1>\n       :\n       <div className={classes.root}>\n         <Grid container spacing={3} justify=\"center\">\n          { allCards.length > 0 ?\n            allCards.map((card) => {\n              return (\n                <Grid item xs={3}>\n                  <TopSubscriptionCardContainer card={card} key={card.id} />\n                </Grid>\n              )\n            })\n            :\n            null\n          }\n         </Grid>\n       </div>\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  getLoading: state.card.getLoading,\n  amountLoading: state.card.amountLoading,\n  allCards: state.card.getAllCardBody,\n  user: state.user.user,\n  amount: state.card.amount\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    getAllCard: (id: string) => GetAllCardAction.start(id),\n    logout: () => logoutAction.start(),\n    getAmount: (id: string) => GetAmountAction.start(id),\n    loginCheck: () => loginMonitoringAction.start()\n  }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowSubscriptionCard)\n","/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx",[],["119","120"],"/front/src/reducers/userReducer.ts",[],"/front/src/sagas/userSaga.ts",[],"/front/src/actions/userActions.ts",[],"/front/src/apis/userApis.ts",[],"/front/src/models/UserModels.ts",[],"/front/src/containers/amount/AmountComponent.tsx",["121","122"],"import React from \"react\";\n\nimport * as Models from \"../../models/CardModels\";\nimport \"./AmountComponent.css\";\n\ninterface Props {\n  amount: Models.CardPriceAmount;\n}\n\nconst AmountComponent: React.FC<Props> = ({\n  amount\n}) => {\n  return (\n    <>\n     <div className=\"box\">\n     { amount.amount !== 0 ?\n       <div className=\"container\">\n         <h2 className=\"month-title\">Monthly fee</h2>\n         <h1 className=\"month-fee\">￥{amount.amount}</h1>\n       </div>\n       :\n       <h2>合計金額を計算できませんでした。</h2>\n     }\n     </div>\n    </>\n  )\n};\n\nexport default AmountComponent;","/front/src/containers/detail-subscription-card/DetailSubscriptionCardComponent.tsx",[],"/front/src/containers/top-subscription-card/TopSubscriptionCardContainer.tsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":14,"column":67,"nodeType":"129","messageId":"130","endLine":14,"endColumn":69},{"ruleId":"127","severity":1,"message":"128","line":14,"column":114,"nodeType":"129","messageId":"130","endLine":14,"endColumn":116},{"ruleId":"123","replacedBy":"131"},{"ruleId":"125","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":13,"column":8,"nodeType":"135","messageId":"136","endLine":13,"endColumn":21},{"ruleId":"133","severity":1,"message":"137","line":7,"column":8,"nodeType":"135","messageId":"136","endLine":7,"endColumn":22},{"ruleId":"138","severity":1,"message":"139","line":105,"column":6,"nodeType":"140","endLine":105,"endColumn":8,"suggestions":"141"},{"ruleId":"123","replacedBy":"142"},{"ruleId":"125","replacedBy":"143"},{"ruleId":"133","severity":1,"message":"144","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":18},{"ruleId":"133","severity":1,"message":"145","line":5,"column":8,"nodeType":"135","messageId":"136","endLine":5,"endColumn":22},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["146"],["147"],"@typescript-eslint/no-unused-vars","'LinkComponent' is defined but never used.","Identifier","unusedVar","'CardActionArea' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCard', 'getAmount', and 'loginCheck'. Either include them or remove the dependency array. If 'loginCheck' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["148"],["146"],["147"],"'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [getAllCard, getAmount, loginCheck]",{"range":"151","text":"152"},[2787,2789],"[getAllCard, getAmount, loginCheck]"]