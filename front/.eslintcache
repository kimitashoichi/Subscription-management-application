2020/01/28/#35-total-amount-to-be-displayed-in-various-months
[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/configureStore.ts":"4","/front/src/sagas/index.ts":"5","/front/src/reducers/index.ts":"6","/front/src/components/LinkComponent.tsx":"7","/front/src/containers/login/LoginContainer.tsx":"8","/front/src/reducers/cardReducer.ts":"9","/front/src/constants/actionTypes.ts":"10","/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx":"11","/front/src/actions/cardActions.ts":"12","/front/src/sagas/cardSaga.ts":"13","/front/src/apis/cardApis.ts":"14","/front/src/utils/firebase.ts":"15","/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx":"16","/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx":"17","/front/src/reducers/userReducer.ts":"18","/front/src/sagas/userSaga.ts":"19","/front/src/actions/userActions.ts":"20","/front/src/apis/userApis.ts":"21","/front/src/models/UserModels.ts":"22","/front/src/containers/subscription-card/TopSubscriptionCardContainer.tsx":"23","/front/src/containers/amount/AmountComponent.tsx":"24","/front/src/containers/detail-subscription-card/DetailSubscriptionCardComponent.tsx":"25"},{"size":714,"mtime":1609752845142,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1609049254169,"results":"28","hashOfConfig":"27"},{"size":691,"mtime":1611188352951,"results":"29","hashOfConfig":"27"},{"size":808,"mtime":1611478147119,"results":"30","hashOfConfig":"27"},{"size":203,"mtime":1611374726541,"results":"31","hashOfConfig":"27"},{"size":458,"mtime":1610184093967,"results":"32","hashOfConfig":"27"},{"size":329,"mtime":1609752845140,"results":"33","hashOfConfig":"27"},{"size":1825,"mtime":1611396849430,"results":"34","hashOfConfig":"27"},{"size":2434,"mtime":1610360669722,"results":"35","hashOfConfig":"27"},{"size":2137,"mtime":1611188352954,"results":"36","hashOfConfig":"27"},{"size":4091,"mtime":1611790939457,"results":"37","hashOfConfig":"27"},{"size":2934,"mtime":1610360669718,"results":"38","hashOfConfig":"27"},{"size":2932,"mtime":1611478147120,"results":"39","hashOfConfig":"27"},{"size":3421,"mtime":1611478147118,"results":"40","hashOfConfig":"27"},{"size":645,"mtime":1609760460854,"results":"41","hashOfConfig":"27"},{"size":5191,"mtime":1611834493722,"results":"42","hashOfConfig":"27"},{"size":3852,"mtime":1611790939458,"results":"43","hashOfConfig":"27"},{"size":1559,"mtime":1611188352955,"results":"44","hashOfConfig":"27"},{"size":1555,"mtime":1611478147121,"results":"45","hashOfConfig":"27"},{"size":1279,"mtime":1611188352952,"results":"46","hashOfConfig":"27"},{"size":3000,"mtime":1611478147119,"results":"47","hashOfConfig":"27"},{"size":1312,"mtime":1611188352955,"results":"48","hashOfConfig":"27"},{"size":5171,"mtime":1611396849432,"results":"49","hashOfConfig":"27"},{"size":2718,"mtime":1611841142470,"results":"50","hashOfConfig":"27"},{"size":2087,"mtime":1611396849427,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"vp4hng",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/front/src/index.tsx",[],["106","107"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",[],"/front/src/configureStore.ts",["108","109"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\nimport rootReducer from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/sagas/index.ts",[],"/front/src/reducers/index.ts",[],"/front/src/components/LinkComponent.tsx",[],["110","111"],"/front/src/containers/login/LoginContainer.tsx",[],"/front/src/reducers/cardReducer.ts",[],"/front/src/constants/actionTypes.ts",[],"/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx",[],"/front/src/actions/cardActions.ts",[],"/front/src/sagas/cardSaga.ts",[],"/front/src/apis/cardApis.ts",[],"/front/src/utils/firebase.ts",[],"/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx",["112"],"/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx",["113"],"import React, { useState, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from '@material-ui/core/TextField';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\n\nimport * as Models from \"../../models/CardModels\";\nimport { AppState } from \"../../models/index\";\nimport {\n  EditCardAction,\n  GetAmountAction,\n  GetAllCardAction,\n} from \"../../actions/cardActions\";\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 600\n  },\n  media: {\n    height: 140\n  },\n  cardContent: {\n    display: \"grid\",\n  },\n  firstTextArea: {\n    marginTop: \"20px\",\n    marginBottom: \"35px\",\n  },\n  textArea: {\n    marginBottom: \"35px\",\n  },\n  buttons: {\n    width: \"90%\",\n    margin: \"auto\",\n    justifyContent: \"flex-end\",\n  }\n});\n\ninterface Props {\n  card: Models.CardBody;\n  editCard: (payload: Models.CardBody) => void;\n  getAmount: (id: string) => void;\n  getallCards: (id: string) => void;\n  setEditDialog: any;\n}\n\nconst EditSubscriptionCardContainer: React.FC<Props> = ({\n  card,\n  editCard,\n  getAmount,\n  setEditDialog,\n  getallCards,\n}) => {\n  const [name, setName] = useState<string>(card.name);\n  const [price, setPrice] = useState<number>(card.price);\n  const [caption, setCaption] = useState<string>(card.caption);\n  const classes = useStyles();\n\n  const submitEditValue = async (e: FormEvent) => {\n    e.preventDefault();\n    const data = {\n      id: card.id,\n      userId: card.userId,\n      name: name,\n      price: price,\n      caption: caption\n    };\n\n    await editCard(data);\n\n    setTimeout(() => {\n      getallCards(card.userId);\n    }, 1000)\n\n    setTimeout(() => {\n      getAmount(card.userId)\n    }, 2000);\n\n    setEditDialog();\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardContent className={classes.cardContent}>\n            <TextField\n              label=\"サービス名\"\n              className={classes.firstTextArea}\n              defaultValue={card.name}\n              multiline\n              onChange={e => setName(e.target.value)}\n              variant=\"outlined\"/>\n            \n            <TextField\n              label=\"月額料金\"\n              className={classes.textArea}\n              defaultValue={card.price}\n              onChange={e => setPrice(Number(e.target.value))}\n              variant=\"outlined\"/>\n            \n            <TextField\n              label=\"サービス概要\"\n              multiline\n              rows={4}\n              defaultValue={card.caption}\n              onChange={e => setCaption(e.target.value)}\n              variant=\"outlined\"/>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className={classes.buttons}>\n          <Button\n            size=\"medium\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={submitEditValue}>\n            Edit\n          </Button>\n          <Button size=\"medium\"\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => setEditDialog()}>\n            Close\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    editCard: (payload: Models.CardBody) => EditCardAction.start(payload),\n    getAmount: (id: string) => GetAmountAction.start(id),\n    getallCards: (id: string) => GetAllCardAction.start(id),\n  }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditSubscriptionCardContainer);","/front/src/reducers/userReducer.ts",[],"/front/src/sagas/userSaga.ts",[],"/front/src/actions/userActions.ts",[],"/front/src/apis/userApis.ts",[],"/front/src/models/UserModels.ts",[],"/front/src/containers/subscription-card/TopSubscriptionCardContainer.tsx",[],"/front/src/containers/amount/AmountComponent.tsx",["114","115"],"/front/src/containers/detail-subscription-card/DetailSubscriptionCardComponent.tsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":14,"column":67,"nodeType":"122","messageId":"123","endLine":14,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":14,"column":114,"nodeType":"122","messageId":"123","endLine":14,"endColumn":116},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":103,"column":6,"nodeType":"128","endLine":103,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":9,"column":8,"nodeType":"132","messageId":"133","endLine":9,"endColumn":22},{"ruleId":"130","severity":1,"message":"134","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":18},{"ruleId":"130","severity":1,"message":"135","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":22},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["136"],["137"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllCard', 'getAmount', and 'loginCheck'. Either include them or remove the dependency array. If 'loginCheck' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["138"],"@typescript-eslint/no-unused-vars","'CardActionArea' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [getAllCard, getAmount, loginCheck]",{"range":"141","text":"142"},[2738,2740],"[getAllCard, getAmount, loginCheck]"]
