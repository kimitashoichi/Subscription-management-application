[{"/front/src/index.tsx":"1","/front/src/reportWebVitals.ts":"2","/front/src/App.tsx":"3","/front/src/configureStore.ts":"4","/front/src/sagas/index.ts":"5","/front/src/reducers/index.ts":"6","/front/src/components/LinkComponent.tsx":"7","/front/src/containers/login/LoginContainer.tsx":"8","/front/src/reducers/cardReducer.ts":"9","/front/src/constants/actionTypes.ts":"10","/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx":"11","/front/src/actions/cardActions.ts":"12","/front/src/sagas/cardSaga.ts":"13","/front/src/apis/cardApis.ts":"14","/front/src/utils/firebase.ts":"15","/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx":"16","/front/src/components/subscription-card/TopSubscriptionCardContainer.tsx":"17","/front/src/components/subscription-card/DetailSubscriptionCardComponent.tsx":"18","/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx":"19"},{"size":714,"mtime":1609752845142,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":1609049254169,"results":"22","hashOfConfig":"21"},{"size":790,"mtime":1609975010849,"results":"23","hashOfConfig":"21"},{"size":808,"mtime":1609752845141,"results":"24","hashOfConfig":"21"},{"size":205,"mtime":1609760460854,"results":"25","hashOfConfig":"21"},{"size":394,"mtime":1609760460852,"results":"26","hashOfConfig":"21"},{"size":329,"mtime":1609752845140,"results":"27","hashOfConfig":"21"},{"size":477,"mtime":1609760460849,"results":"28","hashOfConfig":"21"},{"size":2009,"mtime":1610015330246,"results":"29","hashOfConfig":"21"},{"size":1118,"mtime":1609975241973,"results":"30","hashOfConfig":"21"},{"size":2861,"mtime":1609760460847,"results":"31","hashOfConfig":"21"},{"size":2161,"mtime":1609979239423,"results":"32","hashOfConfig":"21"},{"size":2435,"mtime":1609979348293,"results":"33","hashOfConfig":"21"},{"size":2281,"mtime":1610016774526,"results":"34","hashOfConfig":"21"},{"size":645,"mtime":1609760460854,"results":"35","hashOfConfig":"21"},{"size":1246,"mtime":1609976695645,"results":"36","hashOfConfig":"21"},{"size":4479,"mtime":1610016726207,"results":"37","hashOfConfig":"21"},{"size":1463,"mtime":1609936878857,"results":"38","hashOfConfig":"21"},{"size":3114,"mtime":1610016102217,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"vp4hng",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"/front/src/index.tsx",[],["82","83"],"/front/src/reportWebVitals.ts",[],"/front/src/App.tsx",["84"],"/front/src/configureStore.ts",["85","86"],"import { applyMiddleware, createStore } from \"redux\";\nimport { History } from \"history\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { compose } from '@material-ui/system';\n\nimport { ExtendedWindow } from \"./reduxDevToolExtensionType\";\nimport rootReducer from \"./reducers/index\";\nimport rootSaga from \"./sagas/index\";\n\ndeclare var window: ExtendedWindow;\n\nexport default function configureStore (history: History) {\n  const sagaMiddleware = createSagaMiddleware();\n  const composeReduxDevToolExtension = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const enhanser = composeReduxDevToolExtension(applyMiddleware(sagaMiddleware));\n\n  const store = createStore(\n    rootReducer(history),\n    enhanser\n  );\n\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n\n","/front/src/sagas/index.ts",["87"],"import { fork } from \"redux-saga/effects\";\n\n// それぞれのサガファイルをインポートする\nimport cardSaga from \"./cardSaga\";\n\nexport default function* rootSaga () {\n  yield fork(cardSaga);\n}","/front/src/reducers/index.ts",[],"/front/src/components/LinkComponent.tsx",[],"/front/src/containers/login/LoginContainer.tsx",[],"/front/src/reducers/cardReducer.ts",[],"/front/src/constants/actionTypes.ts",[],"/front/src/containers/add-subscription-card/AddSubscriptionCard.tsx",[],"/front/src/actions/cardActions.ts",[],"/front/src/sagas/cardSaga.ts",[],"/front/src/apis/cardApis.ts",[],"/front/src/utils/firebase.ts",[],"/front/src/containers/show-subscription-card/ShowSubscriptionCard.tsx",["88","89"],"/front/src/components/subscription-card/TopSubscriptionCardContainer.tsx",[],"/front/src/components/subscription-card/DetailSubscriptionCardComponent.tsx",[],"/front/src/containers/edit-subscription-card/EditSubscriptionCardContainer.tsx",["90","91","92"],"import React, { useState, FormEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, Dispatch } from \"redux\";\nimport PropTypes from 'prop-types';\n\nimport * as Models from \"../../models/CardModels\";\nimport { AppState } from \"../../models/index\";\nimport { EditCardAction } from \"../../actions/cardActions\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport TextField from '@material-ui/core/TextField';\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n});\n\ninterface Props {\n  card: Models.CardBody;\n  editCard: (payload: Models.CardBody) => void;\n  setEditDialog: any\n}\n\nconst EditSubscriptionCardContainer: React.FC<Props> = ({\n  card,\n  editCard,\n  setEditDialog\n}) => {\n  const [open, setOpen] = useState<boolean>(true);\n  const [name, setName] = useState<string>(card.name);\n  const [price, setPrice] = useState<number>(card.price);\n  const [caption, setCaption] = useState<string>(card.caption);\n  const classes = useStyles();\n\n  const submitEditValue = async (e: FormEvent) => {\n    e.preventDefault();\n    const data = {\n      name: name,\n      price: price,\n      caption: caption\n    }\n\n    await editCard(data)\n    setEditDialog()\n  }\n\n  return (\n    <>\n      <Card className={classes.root}>\n        <CardContent>\n          <TextField\n            label=\"サービス名\"\n            id=\"outlined-margin-none\"\n            defaultValue={card.name}\n            onChange={e => setName(e.target.value)}\n            variant=\"outlined\"/>\n          \n          <TextField\n            label=\"月額料金\"\n            id=\"outlined-margin-none\"\n            defaultValue={card.price}\n            onChange={e => setPrice(Number(e.target.value))}\n            variant=\"outlined\"/>\n          \n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"サービス概要\"\n            multiline\n            rows={4}\n            defaultValue={card.caption}\n            onChange={e => setCaption(e.target.value)}\n            variant=\"outlined\"\n          />\n\n        </CardContent>\n        <CardActions>\n          {/* TODO：ここをクリックするとモーダルが表示され、編集できるようにする */}\n          <Button size=\"small\" color=\"primary\" onClick={submitEditValue}>\n            Edit\n          </Button>\n          {/* TODO：ここをクリックすると確認モーダルが表示され、削除できるようにする */}\n          <Button size=\"small\" color=\"primary\">\n            Close\n          </Button>\n        </CardActions>\n      </Card>\n    </>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({\n    editCard: (dummy: Models.CardBody) => EditCardAction.start(dummy)\n  }, dispatch)\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditSubscriptionCardContainer);",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":14,"column":67,"nodeType":"103","messageId":"104","endLine":14,"endColumn":69},{"ruleId":"101","severity":1,"message":"102","line":14,"column":114,"nodeType":"103","messageId":"104","endLine":14,"endColumn":116},{"ruleId":"97","severity":1,"message":"105","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":24,"column":6,"nodeType":"108","endLine":24,"endColumn":25,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":24,"column":7,"nodeType":"111","endLine":24,"endColumn":24},{"ruleId":"97","severity":1,"message":"112","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":17},{"ruleId":"97","severity":1,"message":"113","line":37,"column":10,"nodeType":"99","messageId":"100","endLine":37,"endColumn":14},{"ruleId":"97","severity":1,"message":"114","line":37,"column":16,"nodeType":"99","messageId":"100","endLine":37,"endColumn":23},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'AddSubscriptionCardContainer' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'fork' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllCard'. Either include it or remove the dependency array. If 'getAllCard' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["117"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","AssignmentExpression","'PropTypes' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [getAllCard]",{"range":"120","text":"121"},[643,662],"[getAllCard]"]